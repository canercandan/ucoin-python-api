stages:
  - prepare
  - format
  - test
  - build
  - release
  - github-sync

variables:
    PYENV_PYTHON_VERSION: 3.5.5

image: registry.duniter.org/docker/python3/duniterpy-builder:0.0.4

push_to_github:
  stage: github-sync
  variables:
    GIT_STRATEGY: none
  tags:
    - github
  script:
    - rm -rf ./*
    - rm -rf .git
    - git clone --mirror $CI_REPOSITORY_URL .
    - git remote add github $GITHUB_URL_AND_KEY
    - git config --global user.email "contact@duniter.org"
    - git config --global user.name "Duniter"
    # Job would fail if we don't remove refs about pull requests
    - bash -c "cat packed-refs | grep -v 'refs/pull' > packed-refs-new; echo 'Removed pull refs.'"
    - mv packed-refs-new packed-refs
    - bash -c "git push --force --mirror github 2>&1 | grep -v duniter-gitlab; echo $?"

.pyenv: &pyenv
  tags:
    - redshift-docker-python
  before_script:
    - export PYENV_ROOT="$HOME/.pyenv"
    - export PATH="$PYENV_ROOT/bin:$PATH"
    - eval "$(pyenv init -)"
    - pyenv shell $PYENV_PYTHON_VERSION

.changes: &changes
  only:
    changes:
      - duniterpy/**/*.py
      - .gitlab-ci.yml
      - requirements_dev.txt
      - requirements.txt
      - setup.py
      - tests/**/*.py

format:
  <<: *pyenv
  <<: *changes
  stage: format
  script:
    - pyenv shell 3.6.4  # black install and run needs python 3.6.x minimum
    - pip install -r requirements_dev.txt
    - make check-format

test:
  <<: *pyenv
  <<: *changes
  stage: test
  script:
    - pip install coveralls
    - pip install -r requirements.txt
    - coverage run --source=duniterpy setup.py test

check:
  <<: *pyenv
  <<: *changes
  stage: test
  script:
    - pyenv shell 3.6.4  # black install needs python 3.6.x minimum
    - pip install -r requirements.txt
    - pip install -r requirements_dev.txt
    - make mypy
    - make pylint

build: &build
  <<: *pyenv
  <<: *changes
  stage: build
  script:
    - pip install -r requirements.txt
    - pip install wheel
    - python setup.py sdist bdist_wheel

releases:
  <<: *pyenv
  <<: *build
  stage: release
  when: manual
  script:
    - pip install twine
    - twine upload dist/* --username duniter --password $PYPI_PASSWORD

